name: Benchmarks

on:
  push:
    branches: [ main, lexerImpl ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'CMakeLists.txt'
      - '.github/workflows/benchmark.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  benchmark:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for comparing benchmarks
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release
    
    - name: Run benchmarks
      run: |
        mkdir -p ${{github.workspace}}/benchmark_results/latest
        # Assuming you have a benchmark executable
        # Modify this command to match your actual benchmark command
        ${{github.workspace}}/bin/benchmark > ${{github.workspace}}/benchmark_results/latest/results.txt
    
    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: C++ Benchmark
        tool: 'googlecpp'  # Assuming you're using Google Benchmark
        output-file-path: ${{github.workspace}}/benchmark_results/latest/results.txt
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        # Comment out the following lines if you don't want to fail on performance regression
        # fail-on-alert: true
        # alert-threshold: '200%'
        # comment-on-alert: true
        # alert-comment-cc-users: '@username' 